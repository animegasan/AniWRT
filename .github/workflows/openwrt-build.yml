name: Build OpenWrt Image

on:
  workflow_dispatch:
    inputs:
      enable_mod_sdcard:
        description: 'Enable mod-boot-sdcard'
        required: true
        default: 'false'
        type: boolean
      openwrt_version:
        description: 'OpenWrt version to use'
        required: true
        default: '23.05.4'
        type: string
      device_profile:
        description: 'Device profile to build for'
        required: true
        default: 'generic'
        type: string
      kernel_version:
        description: 'Kernel version to use'
        required: true
        default: '5.15'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up OpenWrt Image Builder environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev gawk git subversion libssl-dev gettext unzip zlib1g-dev file wget
        wget https://downloads.openwrt.org/releases/${{ github.event.inputs.openwrt_version }}/targets/armsr/armv8/openwrt-imagebuilder-${{ github.event.inputs.openwrt_version }}-armsr-armv8.Linux-x86_64.tar.xz
        tar -xf openwrt-imagebuilder-${{ github.event.inputs.openwrt_version }}-armsr-armv8.Linux-x86_64.tar.xz

    - name: Optionally clone mod-boot-sdcard repository
      if: ${{ github.event.inputs.enable_mod_sdcard }}
      run: |
        git clone https://github.com/msidiq22/mod-boot-sdcard
        mkdir -p openwrt-imagebuilder-${{ github.event.inputs.openwrt_version }}-armsr-armv8.Linux-x86_64/files/boot
        cp -r mod-boot-sdcard/* openwrt-imagebuilder-${{ github.event.inputs.openwrt_version }}-armsr-armv8.Linux-x86_64/files/boot/

    - name: Build OpenWrt Image
      run: |
        cd openwrt-imagebuilder-${{ github.event.inputs.openwrt_version }}-armsr-armv8.Linux-x86_64
        make image PROFILE=${{ github.event.inputs.device_profile }} PACKAGES="luci luci-app-opkg" FILES="files/"

    - name: Get Image Filename
      id: get_image_filename
      run: |
        cd openwrt-imagebuilder-${{ github.event.inputs.openwrt_version }}-armsr-armv8.Linux-x86_64/bin/targets/armsr/armv8
        IMAGE_FILE=$(ls openwrt-*.img.gz)
        echo "::set-output name=image_file::$IMAGE_FILE"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: OpenWrt Image Build ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload release to GitHub
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: openwrt-imagebuilder-${{ github.event.inputs.openwrt_version }}-armsr-armv8.Linux-x86_64/bin/targets/armsr/armv8/${{ steps.get_image_filename.outputs.image_file }}
        asset_name: ${{ steps.get_image_filename.outputs.image_file }}
        asset_content_type: application/gzip
